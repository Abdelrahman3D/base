/**
 * media queries mixins
 */
responsive(breakpoint)
  @media screen and (min-width: breakpoint)
    {block}

ultrawide()
  @media screen and (min-width: $ultrawide)
    {block}

widescreen()
  @media screen and (min-width: $widescreen)
    {block}

desktop()
  @media screen and (min-width: $desktop)
    {block}

tablet()
  @media screen and (min-width: $tablet)
    {block}

mobile()
  @media screen and (max-width: (($tablet - 1)))
    {block}


/**
 * styling mixins
 */
_icon-color(color)
  fill: color
  stroke-width: 0

_button-color(main, secondary, mode = 'default')
  border-color: main
  background-color: mode == 'inverse' ? transparent : main
  color: mode == 'inverse' ? main : secondary
  _icon-color: mode == 'inverse' ? main : secondary

  &:hover:not(.is-disabled):not([disabled]),
  &:active:not(.is-disabled):not([disabled]),
  &.is-active:not(.is-disabled):not([disabled])
    background-color: mode == 'inverse' ? main : transparent
    color: mode == 'inverse' ? secondary : main
    _icon-color: mode == 'inverse' ? secondary : main

_unit-min-max(unit, size)
  &
    {unit}: unitRes(size.min, size.max)
    +mobile()
      {unit}: unit(size.min, px)
    +widescreen()
      {unit}: unit(size.max, px)

/**
 * modifiers mixins
 */
$tiny
  _unit-min-max: font-size $size-tiny
$small
  _unit-min-max: font-size $size-small
$normal
  _unit-min-max: font-size $size-normal
$large
  _unit-min-max: font-size $size-large
$massive
  _unit-min-max: font-size $size-massive

generateSizes()
  &.is-tiny
    @extend $tiny
  &.is-small
    @extends $small
  &,
  &.is-normal
    @extends $normal
  &.is-large
    @extends $large
  &.is-massive
    @extend $massive